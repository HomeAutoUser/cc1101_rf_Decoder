; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
; Windows, example
debug_port = COM5
monitor_port = COM5          ; only devices without WLAN
upload_port = COM5
; needed library
lib_deps =
;  arminjo/digitalWriteFast@^1.2.0
; https://registry.platformio.org/libraries/arminjo/digitalWriteFast/installation
  watterott/digitalWriteFast@^1.0.0
; https://registry.platformio.org/libraries/watterott/digitalWriteFast/installation

[env_esp]
; all options for ESP
;monitor_port = socket://192.168.2.32/:23
monitor_port = COM5
upload_port = COM5
upload_protocol = esptool
;upload_port = 192.168.2.32
;upload_protocol = espota


[env:nanoatmega328]
platform = atmelavr
board = nanoatmega328
framework = arduino
monitor_speed = 57600
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}

[env:nanoatmega328@DEBUG]
platform = atmelavr
board = nanoatmega328
framework = arduino
monitor_speed = 57600
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D DEBUG

[env:nanoatmega328_CC1101]
platform = atmelavr
board = nanoatmega328
framework = arduino
monitor_speed = 57600
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D CC110x

[env:nanoatmega328_CC1101@DEBUG]
platform = atmelavr
board = nanoatmega328
framework = arduino
monitor_speed = 57600
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D CC110x -D DEBUG

[env:nanoatmega328new]
platform = atmelavr
board = nanoatmega328new
framework = arduino
monitor_speed = 57600
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}

[env:nanoatmega328new@DEBUG]
platform = atmelavr
board = nanoatmega328new
framework = arduino
monitor_speed = 57600
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D DEBUG

[env:nanoatmega328new_CC1101]
platform = atmelavr
board = nanoatmega328new
framework = arduino
monitor_speed = 57600
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D CC110x

[env:nanoatmega328new_CC1101@DEBUG]
platform = atmelavr
board = nanoatmega328new
framework = arduino
monitor_speed = 57600
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D CC110x -D DEBUG

[env:radino_CC1101]
; Arduino compatible (Arduino Micro / Leonardo) - Atmel ATmega32U4
;
; Radino board from in-circuit is not in POI
; these are compatible with all PIN´s
; working correctly; send & receive function works
platform = atmelavr
board = micro
framework = arduino
board_build.mcu = atmega32u4 ; change microcontroller
board_build.f_cpu = 8000000L ; change MCU frequency
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D ARDUINO_RADINOCC1101=1 -D CC110x

[env:radino_CC1101@DEBUG]
; Arduino compatible (Arduino Micro / Leonardo) - Atmel ATmega32U4
;
; Radino board from in-circuit is not in POI
; these are compatible with all PIN´s
; working correctly; send & receive function works
platform = atmelavr
board = micro
framework = arduino
board_build.mcu = atmega32u4 ; change microcontroller
board_build.f_cpu = 8000000L ; change MCU frequency
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D ARDUINO_RADINOCC1101=1 -D CC110x -D DEBUG

[env:esp8266_nodemcuv2]
platform = espressif8266
board = nodemcuv2
board_build.filesystem = littlefs
framework = arduino
monitor_speed = 115200
monitor_port = ${env_esp.monitor_port}
upload_port = ${env_esp.upload_port}
upload_protocol = ${env_esp.upload_protocol}

[env:esp8266_nodemcuv2@DEBUG]
platform = espressif8266
board = nodemcuv2
board_build.filesystem = littlefs
framework = arduino
monitor_speed = 115200
monitor_port = ${env_esp.monitor_port}
upload_port = ${env_esp.upload_port}
upload_protocol = ${env_esp.upload_protocol}
build_flags=-D DEBUG

[env:esp8266_nodemcuv2_CC1101]
platform = espressif8266
board = nodemcuv2
board_build.filesystem = littlefs
framework = arduino
monitor_speed = 115200
monitor_port = ${env_esp.monitor_port}
upload_port = ${env_esp.upload_port}
upload_protocol = ${env_esp.upload_protocol}
build_flags=-D CC110x

[env:esp8266_nodemcuv2_CC1101@DEBUG]
platform = espressif8266
board = nodemcuv2
board_build.filesystem = littlefs
framework = arduino
monitor_speed = 115200
monitor_port = ${env_esp.monitor_port}
upload_port = ${env_esp.upload_port}
upload_protocol = ${env_esp.upload_protocol}
build_flags=-D CC110x -D DEBUG

[env:esp32]
; Espressif ESP32 - dual core, max 240 MHz, GPIO 36, power consumption 260 mA
; platform = espressif32          ; supports ESP-IDF v4 (currently not supported - https://github.com/espressif/arduino-esp32/issues/5821#issuecomment-954807038)
platform = espressif32@1.10.0   ; v1.10.0 is the last version that supports ESP-IDF v3.3
board = nodemcu-32s
framework = arduino
debug_tool = olimex-arm-usb-ocd-h
monitor_speed = 115200
monitor_port = ${env_esp.monitor_port}
upload_port = ${env.upload_port}

[env:esp32@DEBUG]
; Espressif ESP32 - dual core, max 240 MHz, GPIO 36, power consumption 260 mA
; platform = espressif32          ; supports ESP-IDF v4 (currently not supported - https://github.com/espressif/arduino-esp32/issues/5821#issuecomment-954807038)
platform = espressif32@1.10.0   ; v1.10.0 is the last version that supports ESP-IDF v3.3
board = nodemcu-32s
framework = arduino
debug_tool = olimex-arm-usb-ocd-h
monitor_speed = 115200
monitor_port = ${env_esp.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D DEBUG

[env:esp32_CC1101]
; Espressif ESP32 - dual core, max 240 MHz, GPIO 36, power consumption 260 mA
; platform = espressif32          ; supports ESP-IDF v4 (currently not supported - https://github.com/espressif/arduino-esp32/issues/5821#issuecomment-954807038)
platform = espressif32@1.10.0   ; v1.10.0 is the last version that supports ESP-IDF v3.3
board = nodemcu-32s
framework = arduino
debug_tool = olimex-arm-usb-ocd-h
monitor_speed = 115200
monitor_port = ${env_esp.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D CC110x

[env:esp32_CC1101@DEBUG]
; Espressif ESP32 - dual core, max 240 MHz, GPIO 36, power consumption 260 mA
; platform = espressif32          ; supports ESP-IDF v4 (currently not supported - https://github.com/espressif/arduino-esp32/issues/5821#issuecomment-954807038)
platform = espressif32@1.10.0   ; v1.10.0 is the last version that supports ESP-IDF v3.3
board = nodemcu-32s
framework = arduino
debug_tool = olimex-arm-usb-ocd-h
monitor_speed = 115200
monitor_port = ${env_esp.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D CC110x -D DEBUG